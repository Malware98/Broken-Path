package com.malware98.brokenpath.events;

import com.malware98.brokenpath.BrokenPath;
import com.malware98.brokenpath.capabilities.IPlayerXP;
import com.malware98.brokenpath.capabilities.registries.ModCapabilities;
import com.malware98.brokenpath.data.config.XpDataConfig;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.entity.ExperienceOrb;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.item.ItemStack;
import net.minecraftforge.event.entity.player.PlayerEvent;
import net.minecraftforge.event.entity.player.PlayerXpEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.registries.ForgeRegistries;

/**
 * Handles events related to the player's custom XP capability.
 * Includes logic for XP synchronization, orb pickup, and smelting XP gain.
 */
@Mod.EventBusSubscriber(modid = BrokenPath.MOD_ID)
public class PlayerXPEvents {

    // --- Player Event Listeners ---
    /**
     * Synchronizes player XP and level when a player logs into the server.
     */
    @SubscribeEvent
    public static void onPlayerLoggedIn(PlayerEvent.PlayerLoggedInEvent event) {
        if (!event.getEntity().level().isClientSide()) {
            event.getEntity().getCapability(ModCapabilities.PLAYER_XP_CAPABILITY).ifPresent(IPlayerXP::sync);
        }
    }

    /**
     * Handles the collection of experience orbs by the player.
     */
    @SubscribeEvent
    public static void onPlayerPickupXP(PlayerXpEvent.PickupXp event) {
        Player player = event.getEntity();
        if (player == null || player.level().isClientSide()) {
            return;
        }

        ExperienceOrb orb = event.getOrb();
        if (orb == null) {
            return;
        }

        int orbValue = orb.getValue();
        if (orbValue > 0) {
            player.getCapability(ModCapabilities.PLAYER_XP_CAPABILITY).ifPresent(playerXP -> {
                playerXP.addExperience(orbValue);
            });
        }
    }

    /**
     * Grants XP to the player when an item is smelted in a furnace.
     */
    @SubscribeEvent
    public static void onItemSmelted(PlayerEvent.ItemSmeltedEvent event) {
        Player player = event.getEntity();
        if (player == null || player.level().isClientSide()) {
            return;
        }

        ItemStack itemStack = event.getSmelting();
        if (itemStack.isEmpty()) {
            return;
        }

        ResourceLocation itemId = ForgeRegistries.ITEMS.getKey(itemStack.getItem());
        if (itemId == null) {
            return;
        }

        String itemIdString = itemId.toString();
        XpDataConfig xpConfigs = XpDataConfig.getInstance();

        int xpToAward;
        if (xpConfigs.getSmeltingXpRewards().containsKey(itemIdString)) {
            xpToAward = xpConfigs.getSmeltingXpRewards().get(itemIdString);
        } else {
            xpToAward = xpConfigs.getDefaultSmeltingXp();
        }

        if (xpToAward > 0) {
            player.getCapability(ModCapabilities.PLAYER_XP_CAPABILITY).ifPresent(playerXP -> {
                playerXP.addExperience(xpToAward);
            });
        }
    }
}