package com.malware98.brokenpath.network.messages;

import com.malware98.brokenpath.client.PlayerXPClient;
import net.minecraft.network.FriendlyByteBuf;
import net.minecraftforge.network.NetworkEvent;

import java.util.function.Supplier;

/*
 * Paquete enviado del servidor al cliente para sincronizar la experiencia (XP),
 * el nivel y la deuda de XP del jugador.
 */
public class SyncPlayerXPPacket {

    // --- Campos del paquete ---
    private final int experience;
    private final int level;
    private final int xpDebt;

    // --- Constructor ---
    // Constructor para crear el paquete con los datos actuales del jugador desde el servidor.
    public SyncPlayerXPPacket(int experience, int level, int xpDebt) {
        this.experience = experience;
        this.level = level;
        this.xpDebt = xpDebt;
    }

    // --- Codificadores y decodificadores ---
    // Decodificador para leer los datos del paquete desde la red en el cliente.
    public SyncPlayerXPPacket(FriendlyByteBuf buf) {
        this.experience = buf.readInt();
        this.level = buf.readInt();
        this.xpDebt = buf.readInt();
    }

    // Codificador para escribir los datos del paquete y enviarlos por la red desde el servidor.
    public void toBytes(FriendlyByteBuf buf) {
        buf.writeInt(this.experience);
        buf.writeInt(this.level);
        buf.writeInt(this.xpDebt);
    }

    // --- Manejador del paquete ---
    // Manejador para procesar el paquete una vez recibido y decodificado en el cliente.
    public void handle(Supplier<NetworkEvent.Context> ctx) {
        ctx.get().enqueueWork(() -> {
            PlayerXPClient.setPlayerXP(this.experience, this.level, this.xpDebt);
        });
        ctx.get().setPacketHandled(true);
    }

    // --- Getters ---
    // Obtiene la experiencia del jugador.
    public int getExperience() {
        return experience;
    }

    // Obtiene el nivel del jugador.
    public int getLevel() {
        return level;
    }

    // Obtiene la deuda de XP del jugador.
    public int getXpDebt() {
        return xpDebt;
    }
}