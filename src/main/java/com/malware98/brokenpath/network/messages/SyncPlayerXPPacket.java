package com.malware98.brokenpath.network.messages;

import com.malware98.brokenpath.client.PlayerXPClient;
import net.minecraft.network.FriendlyByteBuf;
import net.minecraftforge.network.NetworkEvent;

import java.util.function.Supplier;

//Un paquete que se envía del servidor al cliente para sincronizar la XP y el nivel del jugador.
public class SyncPlayerXPPacket {
    private final int experience;
    private final int level;
    private final int xpDebt;

    // Constructor: Usado por el servidor para crear el paquete con los datos actuales del jugador.
    public SyncPlayerXPPacket(int experience, int level, int xpDebt) {
        this.experience = experience;
        this.level = level;
        this.xpDebt = xpDebt;
    }

    // Decoder: Usado por el cliente para leer los datos del paquete de la red.
    public SyncPlayerXPPacket(FriendlyByteBuf buf) {
        this.experience = buf.readInt();
        this.level = buf.readInt();
        this.xpDebt = buf.readInt();
    }

    // Encoder: Usado por el servidor para escribir los datos del paquete para enviarlos por la red.
    public void toBytes(FriendlyByteBuf buf) {
        buf.writeInt(this.experience);
        buf.writeInt(this.level);
        buf.writeInt(this.xpDebt);
    }

    // Handler: Usado por el cliente para procesar el paquete una vez que ha sido recibido y decodificado.
    public void handle(Supplier<NetworkEvent.Context> ctx) {
        ctx.get().enqueueWork(() -> {
            PlayerXPClient.setPlayerXP(this.experience, this.level, this.xpDebt);
        });
        ctx.get().setPacketHandled(true);
    }

    // Getters para acceder a los datos del paquete (útil en el handler del cliente)
    public int getExperience() {
        return experience;
    }

    public int getLevel() {
        return level;
    }

    public int getXpDebt() {
        return xpDebt;
    }

}