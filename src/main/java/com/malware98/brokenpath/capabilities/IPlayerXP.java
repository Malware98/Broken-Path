package com.malware98.brokenpath.capabilities;

import net.minecraft.nbt.CompoundTag;
import net.minecraftforge.common.util.INBTSerializable;

/**
 * Interface for managing a player's experience (XP) and XP debt.
 * Defines the contract for getting, setting, adding, and synchronizing
 * XP data, as well as NBT serialization for persistence.
 */
public interface IPlayerXP extends INBTSerializable<CompoundTag> {

    // --- XP Logic Methods ---
    // Retrieves the player's current experience points within their level.
    int getExperience();
    // Sets the player's current experience points.
    void setExperience(int experience);
    // Retrieves the player's current level.
    int getLevel();
    // Sets the player's current level.
    void setLevel(int level);
    // Adds a specified amount of experience to the player.
    // This method handles level-ups and interaction with XP debt.
    void addExperience(int amount);
    // Resets the player's experience, level, and XP debt to their initial values.
    void resetXP();

    // --- XP Debt Methods ---
    // Retrieves the player's current XP debt.
    // XP debt must be repaid before the player can gain positive experience.
    int getXPDebt();
    // Sets the player's current XP debt.
    void setXPDebt(int xpDebt);

    // --- Data Synchronization Methods ---
    // Copies XP and debt data from another instance of {@link IPlayerXP}.
    // Used, for example, when a player dies and a new entity is created.
    void copyFrom(IPlayerXP source);
    // Synchronizes the player's XP data from the server to the client.
    // This ensures the client-side UI and systems are up-to-date.
    void sync();
}