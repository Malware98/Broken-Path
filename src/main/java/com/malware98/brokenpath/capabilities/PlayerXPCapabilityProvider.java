package com.malware98.brokenpath.capabilities;

import net.minecraft.core.Direction;
import net.minecraft.nbt.CompoundTag;
import net.minecraftforge.common.capabilities.Capability;
import net.minecraftforge.common.capabilities.ICapabilityProvider;
import net.minecraftforge.common.util.INBTSerializable;
import net.minecraftforge.common.util.LazyOptional;
import com.malware98.brokenpath.capabilities.registries.ModCapabilities;
import net.minecraft.world.entity.player.Player;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

public class PlayerXPCapabilityProvider implements ICapabilityProvider, INBTSerializable<CompoundTag> {

    private final Player player;
    private final LazyOptional<IPlayerXP> instance;

    public PlayerXPCapabilityProvider(Player player) {
        this.player = player;
        this.instance = LazyOptional.of(() -> new PlayerXP(this.player));
    }

    @Nonnull
    @Override
    public <T> LazyOptional<T> getCapability(@Nonnull Capability<T> cap, @Nullable Direction side) {
        return cap == ModCapabilities.PLAYER_XP_CAPABILITY ? instance.cast() : LazyOptional.empty();
    }

    @Override
    public CompoundTag serializeNBT() {
        return instance.orElseThrow(() -> new IllegalArgumentException("LazyOptional must not be empty!"))
                .serializeNBT();
    }

    @Override
    public void deserializeNBT(CompoundTag nbt) {
        instance.orElseThrow(() -> new IllegalArgumentException("LazyOptional must not be empty!"))
                .deserializeNBT(nbt);
    }
}