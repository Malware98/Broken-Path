package com.malware98.brokenpath.commands.suggestions;

import com.mojang.brigadier.context.CommandContext;
import com.mojang.brigadier.suggestion.SuggestionProvider;
import com.mojang.brigadier.suggestion.Suggestions;
import com.mojang.brigadier.suggestion.SuggestionsBuilder;
import net.minecraft.commands.CommandSourceStack;

import java.util.List;
import java.util.Locale;
import java.util.concurrent.CompletableFuture;

/**
 * Provides autocomplete suggestions for attribute names used in mod commands.
 * This enhances user experience by guiding command input with valid attribute options.
 */
public class AttributeSuggestions implements SuggestionProvider<CommandSourceStack> {

    /**
     * Singleton instance for easy access to the suggestion provider.
     */
    public static final AttributeSuggestions INSTANCE = new AttributeSuggestions();

    // List of valid attribute names (uppercase short forms for command input)
    private static final List<String> ATTRIBUTE_NAMES = List.of("CON", "STR", "DEX", "INT"); // KEEP THIS

    /**
     * Retrieves and builds suggestions for attribute names.
     * @param context The command context.
     * @param builder The suggestions builder to populate.
     * @return A CompletableFuture containing the built suggestions.
     */
    @Override
    public CompletableFuture<Suggestions> getSuggestions(CommandContext<CommandSourceStack> context, SuggestionsBuilder builder) {
        // Iterate over all attribute names.
        for (String attributeName : ATTRIBUTE_NAMES) {
            // Suggest the attribute name, ensuring it matches what the user is typing.
            if (attributeName.toLowerCase(Locale.ROOT).startsWith(builder.getRemaining().toLowerCase(Locale.ROOT))) { // Check against lowercase suggestion
                builder.suggest(attributeName); // Suggest original (uppercase)
            }
        }
        return builder.buildFuture();
    }
}