package com.malware98.brokenpath.data;

import com.malware98.brokenpath.BrokenPath;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.TagKey;
import net.minecraft.world.damagesource.DamageType;

public class ModDamageTypeTags {

    //Categorías Principales de Daño
    public static final TagKey<DamageType> IS_PHYSICAL =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "is_physical"));
    public static final TagKey<DamageType> IS_MAGIC =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "is_magic"));

    //Excepciones a Protección
    public static final TagKey<DamageType> IGNORES_PROTECTION =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "ignores_protection"));
    public static final TagKey<DamageType> IS_PENETRATING =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "is_penetrating"));

    //Efectos y Propiedades
    public static final TagKey<DamageType> CAN_BLEED =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "can_bleed"));
    public static final TagKey<DamageType> CAN_STUN =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "can_stun"));
    public static final TagKey<DamageType> CAUSES_BURN =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_burn"));
    public static final TagKey<DamageType> CAUSES_FREEZE =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_freeze"));
    public static final TagKey<DamageType> CAUSES_ELECTROCUTION =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_electrocution"));
    public static final TagKey<DamageType> CAUSES_PURIFICATION =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_purification"));
    public static final TagKey<DamageType> CAUSES_RUPTURE =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_rupture"));
    public static final TagKey<DamageType> CAN_LIFE_STEAL = // Para el robo de vida (si lo asignas a tipos de daño)
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "can_life_steal"));
    public static final TagKey<DamageType> IGNORES_INVULNERABILITY_FRAMES = // Para Ruptura, si lo quieres más genérico
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "ignores_invulnerability_frames"));


    // NOTA: Los tags no se "registran" como los items o bloques.
    // Su existencia se define por la TagKey y su contenido por archivos JSON.
}