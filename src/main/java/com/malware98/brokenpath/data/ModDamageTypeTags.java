package com.malware98.brokenpath.data;

import com.malware98.brokenpath.BrokenPath;
import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.TagKey;
import net.minecraft.world.damagesource.DamageType;

/*
 * Clase que define y almacena las TagKeys para los tipos de daño personalizados del mod.
 * Estas etiquetas se utilizan para clasificar y agrupar diferentes tipos de daño,
 * permitiendo una gestión más flexible de efectos, resistencias y propiedades.
 */
public class ModDamageTypeTags {

    // --- Categorías Principales de Daño ---
    // Etiqueta para tipos de daño considerados físicos.
    public static final TagKey<DamageType> IS_PHYSICAL =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "is_physical"));
    // Etiqueta para tipos de daño considerados mágicos.
    public static final TagKey<DamageType> IS_MAGIC =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "is_magic"));

    // --- Excepciones a Protección ---
    // Etiqueta para tipos de daño que ignoran las protecciones estándar.
    public static final TagKey<DamageType> IGNORES_PROTECTION =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "ignores_protection"));
    // Etiqueta para tipos de daño que tienen propiedades de penetración.
    public static final TagKey<DamageType> IS_PENETRATING =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "is_penetrating"));

    // --- Efectos y Propiedades ---
    // Etiqueta para tipos de daño que pueden causar el efecto de sangrado.
    public static final TagKey<DamageType> CAN_BLEED =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "can_bleed"));
    // Etiqueta para tipos de daño que pueden causar el efecto de aturdimiento.
    public static final TagKey<DamageType> CAN_STUN =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "can_stun"));
    // Etiqueta para tipos de daño que provocan quemaduras.
    public static final TagKey<DamageType> CAUSES_BURN =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_burn"));
    // Etiqueta para tipos de daño que provocan congelación.
    public static final TagKey<DamageType> CAUSES_FREEZE =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_freeze"));
    // Etiqueta para tipos de daño que provocan electrocución.
    public static final TagKey<DamageType> CAUSES_ELECTROCUTION =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_electrocution"));
    // Etiqueta para tipos de daño que provocan purificación.
    public static final TagKey<DamageType> CAUSES_PURIFICATION =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_purification"));
    // Etiqueta para tipos de daño que provocan el efecto de ruptura.
    public static final TagKey<DamageType> CAUSES_RUPTURE =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "causes_rupture"));
    // Etiqueta para tipos de daño que permiten el robo de vida.
    public static final TagKey<DamageType> CAN_LIFE_STEAL =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "can_life_steal"));
    // Etiqueta para tipos de daño que ignoran los frames de invulnerabilidad.
    public static final TagKey<DamageType> IGNORES_INVULNERABILITY_FRAMES =
            TagKey.create(Registries.DAMAGE_TYPE, new ResourceLocation(BrokenPath.MOD_ID, "ignores_invulnerability_frames"));

    // Nota: Los tags no se "registran" como los ítems o bloques.
    // Su existencia se define por la TagKey y su contenido por archivos JSON ubicados en `data/<modid>/tags/damage_type/`.
}